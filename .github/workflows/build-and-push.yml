name: Build and Push to Harbor

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Extract commit message tag
      id: commit_tag
      run: |
        COMMIT_MSG="${{ github.event.head_commit.message || github.event.commits[0].message }}"
        echo "Commit message: $COMMIT_MSG"
        
        # [tag:v1.0.0] 또는 [version:1.0.0] 패턴 찾기
        if echo "$COMMIT_MSG" | grep -qE '\[(tag|version):([^]]+)\]'; then
          TAG=$(echo "$COMMIT_MSG" | grep -oE '\[(tag|version):([^]]+)\]' | head -1 | sed 's/\[.*:\(.*\)\]/\1/')
          echo "Found tag in commit message: $TAG"
          echo "custom_tag=$TAG" >> $GITHUB_OUTPUT
          echo "has_custom_tag=true" >> $GITHUB_OUTPUT
        else
          echo "No custom tag found, using default"
          DEFAULT_TAG="${{ steps.meta.outputs.version }}-${{ github.sha }}"
          echo "custom_tag=$DEFAULT_TAG" >> $GITHUB_OUTPUT
          echo "has_custom_tag=false" >> $GITHUB_OUTPUT
        fi

    - name: Prepare image tags
      id: image_tags
      run: |
        BASE_TAGS="${{ steps.meta.outputs.tags }}"
        if [ "${{ steps.commit_tag.outputs.has_custom_tag }}" = "true" ]; then
          CUSTOM_TAG="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.commit_tag.outputs.custom_tag }}"
          echo "all_tags<<EOF" >> $GITHUB_OUTPUT
          echo "$BASE_TAGS" >> $GITHUB_OUTPUT
          echo "$CUSTOM_TAG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        else
          echo "all_tags<<EOF" >> $GITHUB_OUTPUT
          echo "$BASE_TAGS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        fi

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.image_tags.outputs.all_tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Output image digest
      run: echo ${{ steps.build.outputs.digest }}

    - name: Trigger ops repository update
      if: github.ref == 'refs/heads/main'
      uses: peter-evans/repository-dispatch@v2
      with:
        token: ${{ secrets.OPS_REPO_TOKEN }}
        repository: hyjk826/testweb-ops
        event-type: image-updated-web
        client-payload: |
          {
            "image": "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}",
            "tag": "${{ steps.commit_tag.outputs.custom_tag }}",
            "digest": "${{ steps.build.outputs.digest }}",
            "commit_sha": "${{ github.sha }}",
            "ref": "${{ github.ref }}",
            "image_type": "web"
          }
